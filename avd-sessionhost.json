{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "17816272458422666120"
    }
  },
  "parameters": {
    "sessionHostPrefix": {
      "type": "string",
      "defaultValue": "vPAW",
      "metadata": {
        "description": "Prefix for the VPAW session host"
      }
    },
    "userFirstName": {
      "type": "string",
      "metadata": {
        "description": "First name of the user"
      }
    },
    "userLastName": {
      "type": "string",
      "metadata": {
        "description": "Last name of the user"
      }
    },
    "userUPN": {
      "type": "string",
      "metadata": {
        "description": "User Principal Name (UPN) for assignment"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "VPAW-Admin",
      "metadata": {
        "description": "Admin username for the session host"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the session host"
      }
    },
    "hostPoolRegistrationInfoToken": {
      "type": "string",
      "metadata": {
        "description": "Registration key for the AVD host pool"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "defaultValue": "vPAW",
      "metadata": {
        "description": "Resource group containing the vNet"
      }
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "vPAW-Vnet",
      "metadata": {
        "description": "Name of the vNet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "vPAW-Subnet",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "dns1": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Primary DNS server for session host (leave blank for default)"
      }
    },
    "dns2": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Secondary DNS server for session host (leave blank for default or only use one)"
      }
    },
    "sessionHostPrepScriptUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/andrew-kemp/AzureVirtualDesktop/refs/heads/main/02a-SessionHostPrep.ps1",
      "metadata": {
        "description": "URL of the SessionHostPrep.ps1 script"
      }
    }
  },
  "variables": {
    "sessionHostName": "[format('{0}-{1}{2}', parameters('sessionHostPrefix'), parameters('userFirstName'), parameters('userLastName'))]",
    "modulesURL": "[format('https://wvdportalstorageblob.blob.{0}/galleryartifacts/Configuration_1.0.02797.442.zip', environment().suffixes.storage)]",
    "sessionHostPrepScriptName": "[substring(parameters('sessionHostPrepScriptUrl'), add(lastIndexOf(parameters('sessionHostPrepScriptUrl'), '/'), 1))]",
    "dnsServers": "[concat(if(empty(parameters('dns1')), createArray(), createArray(parameters('dns1'))), if(empty(parameters('dns2')), createArray(), createArray(parameters('dns2'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}-nic', variables('sessionHostName'))]",
      "location": "[resourceGroup().location]",
      "properties": "[union(createObject('ipConfigurations', createArray(createObject('name', 'ipconfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vNetResourceGroup')), 'Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vNetName'), parameters('subnetName')), '/')[0], split(format('{0}/{1}', parameters('vNetName'), parameters('subnetName')), '/')[1])))))), if(empty(variables('dnsServers')), createObject(), createObject('dnsSettings', createObject('dnsServers', variables('dnsServers')))))]"
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[variables('sessionHostName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_d2as_v5"
        },
        "osProfile": {
          "computerName": "[variables('sessionHostName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-11",
            "sku": "win11-24h2-avd",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "diskSizeGB": 256
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('sessionHostName')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('sessionHostName')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('sessionHostName'), format('{0}-EntraJoinEntrollIntune', variables('sessionHostName')))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Azure.ActiveDirectory",
        "type": "AADLoginForWindows",
        "typeHandlerVersion": "2.2",
        "autoUpgradeMinorVersion": true,
        "enableAutomaticUpgrade": false,
        "settings": {
          "mdmId": "0000000a-0000-0000-c000-000000000000"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('sessionHostName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', variables('sessionHostName'), format('{0}-guestAttestationExtension', variables('sessionHostName')))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Azure.Security.WindowsAttestation",
        "type": "GuestAttestation",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('sessionHostName'), format('{0}-EntraJoinEntrollIntune', variables('sessionHostName')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('sessionHostName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', variables('sessionHostName'), format('{0}-SessionPrep', variables('sessionHostName')))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('sessionHostPrepScriptUrl')]"
          ],
          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File .\\{0} ', variables('sessionHostPrepScriptName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('sessionHostName'), format('{0}-guestAttestationExtension', variables('sessionHostName')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('sessionHostName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}/{1}', variables('sessionHostName'), format('{0}-JointoHostPool', variables('sessionHostName')))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "settings": {
          "modulesUrl": "[variables('modulesURL')]",
          "configurationFunction": "Configuration.ps1\\AddSessionHost",
          "properties": {
            "hostPoolName": "[format('{0}-HostPool', parameters('sessionHostPrefix'))]",
            "aadJoin": true
          }
        },
        "protectedSettings": {
          "properties": {
            "registrationInfoToken": "[parameters('hostPoolRegistrationInfoToken')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('sessionHostName'), format('{0}-SessionPrep', variables('sessionHostName')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('sessionHostName'))]"
      ]
    }
  ],
  "outputs": {
    "postDeploymentInstructions": {
      "type": "string",
      "value": "MANUAL STEPS REQUIRED:\n1. Assign the session host (${sessionHostName}) to user UPN: ${userUPN} as a personal desktop in the AVD HostPool.\n   This can be done via Azure Portal or PowerShell:\n   Add-RdsSessionHost -TenantName <tenant> -HostPoolName <hostpool> -Name ${sessionHostName} -AssignedUser ${userUPN}\n2. Update the AVD enterprise app and grant it permission.\n3. Exclude the storage app from Conditional Access policies.\n4. Add the folder permissions via a hybrid-joined client.\n5. Assign AAD/Entra groups to AVD Application Groups as needed.\n6. Update Session Desktop friendly name if required.\n7. Update DNS for ${storageAccountName}.file.${environment().suffixes.storage} if using a private endpoint.\n"
    }
  }
}